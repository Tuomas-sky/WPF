<Window x:Class="framework_03_command.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:framework_03_command"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--<Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>-->
     <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <!--1、实例化一个RouteUICommand命令-->
    <!--<Window.Resources>
        <RoutedUICommand x:Key="PlayCommand" Text="Play"/>
    </Window.Resources>-->
    <!--2、实例化一个CommandBinding对象-->
    <!--<Window.CommandBindings>
        <CommandBinding Command="{StaticResource PlayCommand}"
                Executed="CommandBinding_Executed"
                CanExecute="CommandBinding_CanExecute"/>
    </Window.CommandBindings>-->
    <!--3、命令绑定到命令源对象-->
    <!--<Window.InputBindings>
        鼠标+ctrl键触发command
        <MouseBinding Gesture="Control+WheelClick" Command="{StaticResource PlayCommand}"/>
        快捷键触发command
        <KeyBinding Gesture="Alt+S" Command="{StaticResource PlayCommand}"/>
    </Window.InputBindings>--> 
    
    <!--ApplicationCommands命令实战-->
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open"  
                    CanExecute="OpenCommandCanExecute" 
                    Executed="OpenCommandExecuted"  />

        <CommandBinding Command="ApplicationCommands.Cut" 
                    CanExecute="CutCommandCanExecute" 
                    Executed="CutCommandExecuted" />

        <CommandBinding Command="ApplicationCommands.Paste" 
                    CanExecute="PasteCommandCanExecute" 
                    Executed="PasteCommandExecuted" />

        <CommandBinding Command="ApplicationCommands.Save"  
                    CanExecute="SaveCommandCanExecute" 
                    Executed="SaveCommandExecuted" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="X" Modifiers="Control" Command="ApplicationCommands.Cut" />
        <KeyBinding Key="V" Modifiers="Control" Command="ApplicationCommands.Paste" />
        <KeyBinding Key="S" Modifiers="Control" Command="ApplicationCommands.Save" />
        <KeyBinding Key="O" Modifiers="Control" Command="ApplicationCommands.Open" />
    </Window.InputBindings>

    <Grid>
        <!--ICommand实现-->
        <!--<Button Width="100" Height="30" Content="打开1" HorizontalAlignment="Left" Command="{Binding OpenCommand}" Margin="100 0 0 0" />
        <Button Width="100" Height="30" Content="打开2" HorizontalAlignment="Center"
                Command="{Binding OpenParamCommand}" 
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"  />
        <Button Width="100" Height="30" Content="打开3" HorizontalAlignment="Right" Margin="0 0 100 0"
         Command="{Binding OpenTParamCommand}" 
         CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"  />-->
        <!--3、调用PlayCommand命令-->
        <!--<StackPanel VerticalAlignment="Center">
            <Button Width="100" Height="30" 
                Content="播放" Margin="10"
                Command="{StaticResource PlayCommand}" />
            <Button Width="100" Height="30" 
                Content="打开" 
                Command="{Binding OpenParamCommand}" 
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
        </StackPanel>-->
        <!--Application-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="打开" Margin="5" Command="ApplicationCommands.Open"/>
            <Button Content="剪切" Margin="5" Command="ApplicationCommands.Cut"/>
            <Button Content="粘贴" Margin="5" Command="ApplicationCommands.Paste"/>
            <Button Content="保存" Margin="5" Command="ApplicationCommands.Save"/>
            <Button Content="mvvmlight"  Margin="5"  Command="{Binding MvvmlightCommand}"   CommandParameter="Hello,Mvvmlight"/>
            <Button Content="prism无参数" Margin="5" Command="{Binding DelegateCommand}" CommandParameter="Hello,Prism"/>
            <Button Content="Prism有参数" Margin="5" Command="{Binding ParamCommand}" CommandParameter="Hello,Prism"/>
            <Button Content="Prism合并命令" Margin="5" Command="{Binding CompositeCommand}" CommandParameter="CompositeCommand"/>
        </StackPanel>
        
        <!--<TextBox x:Name="textbox" Grid.Row="1" Margin="5" TextWrapping="Wrap">
        </TextBox>-->
        <!--WPF事件转Command命令-->
        <TextBox x:Name="textbox" Grid.Row="2" Margin="5" TextWrapping="Wrap">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseDown">
                    <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TextBox}}">
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <!--ReactiveCommand-->
        <StackPanel Grid.Row="1">
            <TextBlock Text="ReactiveUI之ReactiveCommand" FontSize="28" Margin="5"/>
            <StackPanel Orientation="Horizontal">
                <Button Margin="5" Content="普通命令" Command="{Binding GeneralCommand}"/>
                <Button Margin="5" Content="参数命令" Command="{Binding ParameterCommand}" 
                    CommandParameter="Hello,Parameter"/>
                <Button Margin="5" Content="子线程命令" Command="{Binding TaskCommand}"/>
                <Button Margin="5" Content="合并命令" Command="{Binding CombinedCommand}"/>
                <Button Margin="5" Content="Observable命令" Command="{Binding ObservableCommand}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
